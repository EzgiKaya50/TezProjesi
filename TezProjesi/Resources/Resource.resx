<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="adres" xml:space="preserve">
    <value>Adres</value>
  </data>
  <data name="anasayfa" xml:space="preserve">
    <value>Ana Sayfa</value>
  </data>
  <data name="ara" xml:space="preserve">
    <value>Ara</value>
  </data>
  <data name="ay" xml:space="preserve">
    <value>Ay</value>
  </data>
  <data name="cocuk" xml:space="preserve">
    <value>Çocuk</value>
  </data>
  <data name="cocuksayisi" xml:space="preserve">
    <value>Çocuk Sayısı</value>
  </data>
  <data name="cıkıstarihi" xml:space="preserve">
    <value>Çıkış Tarihi</value>
  </data>
  <data name="cıkısyap" xml:space="preserve">
    <value>Çıkış Yap</value>
  </data>
  <data name="detay" xml:space="preserve">
    <value>Detay</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="fiyataralıgı" xml:space="preserve">
    <value>Fiyat Aralığı</value>
  </data>
  <data name="fiyatpuan" xml:space="preserve">
    <value>Fiyat/Performans Puanı</value>
  </data>
  <data name="gecelikfiyat" xml:space="preserve">
    <value>Gecelik Fiyat</value>
  </data>
  <data name="genelpuan" xml:space="preserve">
    <value>Genel Puanı</value>
  </data>
  <data name="giristarihi" xml:space="preserve">
    <value>Giriş Tarihi</value>
  </data>
  <data name="girisyap" xml:space="preserve">
    <value>Giriş Yap</value>
  </data>
  <data name="hakkimizdametin" xml:space="preserve">
    <value>EBG tur çatısı altında hayata geçirdiğimiz alt markalarımız ile konaklama, ulaşım ve acente zincirini kurarak, turizmin tüm gerekliliklerini kapsayan hizmetler sunuyoruz. Otel rezervasyonu ile tüketicinin ihtiyaç ve beklentilerini karşılıyoruz.</value>
  </data>
  <data name="hakkımızda" xml:space="preserve">
    <value>Hakkımızda</value>
  </data>
  <data name="hızlımenü" xml:space="preserve">
    <value>Hızlı Menü</value>
  </data>
  <data name="isim" xml:space="preserve">
    <value>İsim</value>
  </data>
  <data name="kartnumarası" xml:space="preserve">
    <value>Kart Numarası</value>
  </data>
  <data name="kartınuzerindekiad" xml:space="preserve">
    <value>Kartın Üzerindeki Ad</value>
  </data>
  <data name="kaydet" xml:space="preserve">
    <value>Kaydet</value>
  </data>
  <data name="kaydol" xml:space="preserve">
    <value>Kaydol</value>
  </data>
  <data name="konumpuan" xml:space="preserve">
    <value>Konum Puanı</value>
  </data>
  <data name="oda" xml:space="preserve">
    <value>Oda</value>
  </data>
  <data name="odaara" xml:space="preserve">
    <value>Oda Ara</value>
  </data>
  <data name="odapuan" xml:space="preserve">
    <value>Oda Puanı</value>
  </data>
  <data name="odemeyap" xml:space="preserve">
    <value>Ödeme Yap</value>
  </data>
  <data name="onecikanoteller" xml:space="preserve">
    <value>Öne Çıkan Oteller</value>
  </data>
  <data name="otel" xml:space="preserve">
    <value>Otel</value>
  </data>
  <data name="oteller" xml:space="preserve">
    <value>Oteller</value>
  </data>
  <data name="popülerbölgeler" xml:space="preserve">
    <value>Popüler Bölgeler</value>
  </data>
  <data name="profil" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="rezervasyonlarım" xml:space="preserve">
    <value>Rezervasyonlarım</value>
  </data>
  <data name="rezervasyonyap" xml:space="preserve">
    <value>Rezervasyon Yap</value>
  </data>
  <data name="seciniz" xml:space="preserve">
    <value>Seçiniz..</value>
  </data>
  <data name="servispuan" xml:space="preserve">
    <value>Servis Puanı</value>
  </data>
  <data name="sifre" xml:space="preserve">
    <value>Şifre</value>
  </data>
  <data name="sizdengelenyorumlar" xml:space="preserve">
    <value>Sizden Gelen Yorumlar..</value>
  </data>
  <data name="soyad" xml:space="preserve">
    <value>Soyad</value>
  </data>
  <data name="tarih" xml:space="preserve">
    <value>Tarih</value>
  </data>
  <data name="telefon" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="toplamfiyat" xml:space="preserve">
    <value>Toplam Fiyat</value>
  </data>
  <data name="yemekpuan" xml:space="preserve">
    <value>Yemek Puanı</value>
  </data>
  <data name="yetiskin" xml:space="preserve">
    <value>Yetişkin</value>
  </data>
  <data name="yetiskinsayisi" xml:space="preserve">
    <value>Yetişkin Sayısı</value>
  </data>
  <data name="yorum" xml:space="preserve">
    <value>Yorumlar</value>
  </data>
  <data name="yorumyap" xml:space="preserve">
    <value>Yorum Yap</value>
  </data>
  <data name="yıl" xml:space="preserve">
    <value>Yıl</value>
  </data>
</root>